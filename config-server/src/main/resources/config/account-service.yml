springdoc:
  swagger-ui.path: /openapi/swagger-ui.html
  api-docs.path: /openapi/v3/api-docs
  packagesToScan: se.magnus.microservices.composite.product
  pathsToMatch: /**

api:

  common:
    version: 1.0.0
    title: Account Service API
    description: Description of the API...
    termsOfService: MY TERMS OF SERVICE
    license: MY LICENSE
    licenseUrl: MY LICENSE URL

    externalDocDesc: MY WIKI PAGE
    externalDocUrl: MY WIKI URL
    contact:
      name: Aaron MAJAMBO
      url: https://github.com/aaronmaj
      email: aaronmajb@gmail.com

  responseCodes:
    ok.description: OK
    badRequest.description: Bad Request, invalid format of the request. See response message for more information
    notFound.description: Not found, the specified id does not exist
    unprocessableEntity.description: Unprocessable entity, input parameters caused the processing to fail. See response message for more information

  product-composite:

    get-composite-product:
      description: Returns a composite view of the specified product id
      notes: |
        # Normal response
        If the requested account id is found the method will return information regarding:
        1. Account information
        1. Service Addresses\n(technical information regarding the addresses of the microservices that created the response)
        # Expected partial and error responses
        In the following cases, only a partial response be created (used to simplify testing of error conditions)
        ## Product id 113
        200 - Ok, but no recommendations will be returned
        ## Product id 213
        200 - Ok, but no reviews will be returned
        ## Non numerical product id
        400 - A **Bad Request** error will be returned
        ## Product id 13
        404 - A **Not Found** error will be returned
        ## Negative product ids
        422 - An **Unprocessable Entity** error will be returned
server:
  port: 8081
  error:
    include-message: always
spring:
  jpa:
    hibernate:
      ddl-auto: none
      naming-strategy: org.hibernate.cfg.ImprovedNamingStrategy

    database: POSTGRESQL
    defer-datasource-initialization: true
    show-sql: true
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
  datasource:
    platform: postgres
    testWhileIdle: true
    validationQuery: SELECT 1

  database:
    driverClassName: org.postgresql.Driver
  cloud:
    loadbalancer:
      ribbon:
        enabled: false
management:
  endpoints:
    web:
      base-path: /
    enabled-by-default: false
  endpoint:
    health:
      enabled: true
      show-details: always
  health:
    db:
      enabled: false
    diskspace:
      enabled: true


eureka:
  instance:
    preferIpAddress: true
  client:
    register-with-eureka: true
    fetch-registry: true
    service-url:
      defaultZone: http://eurekaserver:8761/eureka/

---
spring.config.activate.on-profile: docker

server.port: 8080